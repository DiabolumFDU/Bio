<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>system_ddr3_0_0</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>C0_SYS_CLK</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="diff_clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="diff_clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_sys_clk_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK_P</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_sys_clk_p</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK.BOARD.ASSOCIATED_PARAM">C0_CLOCK_BOARD_INTERFACE</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CAN_DEBUG</spirit:name>
          <spirit:value spirit:format="bool" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK.CAN_DEBUG">false</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_SYS_CLK" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.System_Clock&apos;)) = &quot;Differential&quot; )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_SYS_CLK_I</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_sys_clk_i</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK_I.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK_I.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK_I.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK_I.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_SYS_CLK_I.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_SYS_CLK_I" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.System_Clock&apos;)) = &quot;No_Buffer&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="ddrx" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="ddrx_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_ba</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CAS_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_cas_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CK_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_ck_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CK_P</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_ck_p</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CKE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_cke</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CS_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_cs_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DM</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_dm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DQ</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_dq</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DQS_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_dqs_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DQS_P</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_dqs_p</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ODT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_odt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PARITY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_parity</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RAS_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_ras_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RESET_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_reset_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WE_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_we_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.C0_DDR3.BOARD.ASSOCIATED_PARAM">C0_DDR3_BOARD_INTERFACE</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CAN_DEBUG</spirit:name>
          <spirit:value spirit:format="bool" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.CAN_DEBUG">false</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TIMEPERIOD_PS</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.TIMEPERIOD_PS">1250</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MEMORY_TYPE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.MEMORY_TYPE">SODIMMs</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MEMORY_PART</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.MEMORY_PART">MT9KSF51272HZ-1G6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.DATA_WIDTH">72</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CS_ENABLED</spirit:name>
          <spirit:value spirit:format="bool" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.CS_ENABLED">true</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>DATA_MASK_ENABLED</spirit:name>
          <spirit:value spirit:format="bool" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.DATA_MASK_ENABLED">false</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SLOT</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.SLOT">Single</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CUSTOM_PARTS</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.CUSTOM_PARTS">no_file_loaded</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MEM_ADDR_MAP</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.MEM_ADDR_MAP">BANK_ROW_COLUMN</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.BURST_LENGTH">8</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AXI_ARBITRATION_SCHEME</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.AXI_ARBITRATION_SCHEME">WRITE_PRIORITY_REG</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CAS_LATENCY</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.CAS_LATENCY">11</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CAS_WRITE_LATENCY</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3.CAS_WRITE_LATENCY">8</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_APP</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="ddrx_app" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="ddrx_app" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_ADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_AUTOPRECHARGE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_autoprecharge</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_CMD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_cmd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_CORRECT_EN_I</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_correct_en_i</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_en</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_HI_PRI</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_hi_pri</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_RD_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_rd_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_RD_DATA_END</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_rd_data_end</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_RD_DATA_VALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_rd_data_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_RDY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_rdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_REF_ACK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_ref_ack</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_REF_REQ</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_ref_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_WDF_END</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_wdf_end</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_WDF_MASK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_wdf_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_WDF_RDY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_wdf_rdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_WDF_WREN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_wdf_wren</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_WDR_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_wdf_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_zq_ack</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_zq_ack</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>APP_ZQ_REQ</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_app_zq_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_APP" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_ATG</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="ddrx_atg" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="ddrx_atg" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_CLR_ERR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_clr_error</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_ERR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_error</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_ERR_BIT_VAL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_status_err_bit_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_ERR_CHK_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_err_chk_en</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_INSTR_ADDR_MODE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_instr_addr_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_INSTR_DATA_MODE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_instr_data_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_INSTR_ITER_NUM</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_instr_num_of_iter</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_INSTR_NXT_INSTR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_instr_nxt_instr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_INSTR_RW_MODE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_instr_rw_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_INSTR_RW_SUBMODE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_instr_rw_submode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_rst</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_START</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_start</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_STATUS_DONE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_status_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_STATUS_ERR_TY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_status_err_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_STATUS_ERR_TYPE_VAL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_status_err_type_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_STATUS_WD_HANG</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_status_watch_dog_hang</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRAFFIC_WR_DONE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>traffic_wr_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WIN_START</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>win_start</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WIN_STATUS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>win_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_ATG" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_S_AXI_CTRL</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="C0_DDR3_MEMORY_MAP_CTRL"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_araddr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_arready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_arvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_awaddr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_awready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_awvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_bready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_bresp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_bvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_rdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_rready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_rresp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_rvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_wdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_wready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_ctrl_wvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.FREQ_HZ" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_UI_CLOCK&apos;))">200000000</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.DATA_WIDTH">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.ADDR_WIDTH">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_S_AXI_CTRL" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_S_AXI</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="C0_DDR3_MEMORY_MAP"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_araddr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arburst</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARCACHE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arcache</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arlen</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLOCK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arlock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARPROT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arprot</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARQOS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arqos</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arsize</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_arvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awaddr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awburst</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWCACHE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awcache</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awlen</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLOCK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awlock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWPROT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awprot</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWQOS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awqos</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awsize</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_awvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_bid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_bready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_bresp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_bvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_rdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_rid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_rlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_rready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_rresp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_rvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_wdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_wlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_wready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_wstrb</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_s_axi_wvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.FREQ_HZ" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_UI_CLOCK&apos;))">200000000</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.DATA_WIDTH">512</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.PROTOCOL">AXI4</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.ID_WIDTH">4</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.ADDR_WIDTH">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_LOCK">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_PROT">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_CACHE">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_QOS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.MAX_BURST_LENGTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_S_AXI" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_ARESETN</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_aresetn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.C0_DDR3_ARESETN.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_ARESETN" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_RESET</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_ui_clk_sync_rst</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.C0_DDR3_RESET.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_RESET" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>C0_DDR3_CLOCK</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>c0_ddr3_ui_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.FREQ_HZ" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_UI_CLOCK&apos;))">200000000</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.PHASE">0.00</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.ASSOCIATED_BUSIF">C0_DDR3_S_AXI:C0_DDR3_S_AXI_CTRL</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.ASSOCIATED_RESET">c0_ddr3_aresetn:c0_ddr3_ui_clk_sync_rst</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.CLK_DOMAIN">system_ddr3_0_0_c0_ddr3_ui_clk</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.C0_DDR3_CLOCK" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ADDN_UI_CLKOUT1</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>addn_ui_clkout1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT1.FREQ_HZ" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT1_FREQ_HZ&apos;))*1000000)">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT1.PHASE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT1_PHASE&apos;))">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_ASYNC_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT1.ASSOCIATED_ASYNC_RESET">c0_aresetn</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT1.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT1.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT1.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ADDN_UI_CLKOUT1" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT1_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ADDN_UI_CLKOUT2</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>addn_ui_clkout2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT2.FREQ_HZ" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT2_FREQ_HZ&apos;))*1000000)">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT2.PHASE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT2_PHASE&apos;))">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_ASYNC_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT2.ASSOCIATED_ASYNC_RESET">c0_aresetn</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT2.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT2.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT2.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ADDN_UI_CLKOUT2" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT2_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ADDN_UI_CLKOUT3</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>addn_ui_clkout3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT3.FREQ_HZ" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT3_FREQ_HZ&apos;))*1000000)">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT3.PHASE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT3_PHASE&apos;))">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_ASYNC_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT3.ASSOCIATED_ASYNC_RESET">c0_aresetn</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT3.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT3.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT3.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ADDN_UI_CLKOUT3" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT3_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ADDN_UI_CLKOUT4</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>addn_ui_clkout4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT4.FREQ_HZ" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT4_FREQ_HZ&apos;))*1000000)">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="dependent" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT4.PHASE" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.M_ADDN_UI_CLKOUT4_PHASE&apos;))">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_ASYNC_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT4.ASSOCIATED_ASYNC_RESET">c0_aresetn</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT4.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT4.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ADDN_UI_CLKOUT4.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ADDN_UI_CLKOUT4" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT4_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SYSTEM_RESET</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_rst</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.SYSTEM_RESET.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.SYSTEM_RESET.BOARD.ASSOCIATED_PARAM">RESET_BOARD_INTERFACE</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:memoryMaps>
    <spirit:memoryMap>
      <spirit:name>C0_DDR3_MEMORY_MAP</spirit:name>
      <spirit:addressBlock>
        <spirit:name>C0_DDR3_ADDRESS_BLOCK</spirit:name>
        <spirit:baseAddress spirit:format="long" spirit:resolve="dependent">0</spirit:baseAddress>
        <spirit:range spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_MEM_SIZE&apos;))">4294967296</spirit:range>
        <spirit:width spirit:format="long">32</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.C0_DDR3_MEMORY_MAP.C0_DDR3_ADDRESS_BLOCK" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>C0_DDR3_MEMORY_MAP_CTRL</spirit:name>
      <spirit:addressBlock>
        <spirit:name>C0_REG</spirit:name>
        <spirit:baseAddress spirit:format="long" spirit:resolve="dependent">0</spirit:baseAddress>
        <spirit:range spirit:format="long">4096</spirit:range>
        <spirit:width spirit:format="long">32</spirit:width>
        <spirit:usage>register</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.C0_DDR3_MEMORY_MAP_CTRL.C0_REG" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
  </spirit:memoryMaps>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_elaborateports</spirit:name>
        <spirit:displayName>Elaborate Ports</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:elaborate.ports</spirit:envIdentifier>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>7:d04ebe12</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_elaboratesubcores</spirit:name>
        <spirit:displayName>Elaborate Sub-Cores</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:elaborate.subcores</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_elaboratesubcores_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>7:d04ebe12</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>c0_init_calib_complete</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_init_calib_complete" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_clk" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_sys_clk_p</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_sys_clk_p" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.System_Clock&apos;)) = &quot;Differential&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_sys_clk_n</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_sys_clk_n" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.System_Clock&apos;)) = &quot;Differential&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_sys_clk_i</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_sys_clk_i" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.System_Clock&apos;)) = &quot;No_Buffer&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_rd_data_cmp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_rd_data_cmp" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_expected_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_expected_data" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_cal_seq</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_cal_seq" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_cal_seq_cnt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_cal_seq_cnt" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_cal_seq_rd_cnt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_cal_seq_rd_cnt" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_rd_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_rd_valid" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_cmp_byte</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_cmp_byte" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_rd_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_rd_data" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_cplx_config</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_cplx_config" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_cplx_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_cplx_status" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_io_address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">27</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_io_address" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_pllGate</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_pllGate" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_phy2clb_fixdly_rdy_low</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">19</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_phy2clb_fixdly_rdy_low" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_phy2clb_fixdly_rdy_upp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">19</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_phy2clb_fixdly_rdy_upp" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_phy2clb_phy_rdy_low</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">19</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_phy2clb_phy_rdy_low" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_phy2clb_phy_rdy_upp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">19</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_phy2clb_phy_rdy_upp" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cal_r0_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">127</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cal_r0_status" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cal_post_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cal_post_status" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.Debug_Signal&apos;)) = &quot;Enable&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dbg_bus</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dbg_bus" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ecc_err_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">44</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ecc_err_addr" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ecc_single</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="2*spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_nCK_PER_CLK&apos;))-1">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ecc_single" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ecc_multiple</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="2*spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_nCK_PER_CLK&apos;))-1">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ecc_multiple" xilinx:dependency="( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) &amp;&amp; ( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_ROW_WIDTH&apos;))-1">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_addr" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ba</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_BANK_WIDTH&apos;))-1">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ba" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_cas_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_cas_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_cke</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_CKE_WIDTH&apos;))-1">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_cke" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ck_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_CK_WIDTH&apos;))-1">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ck_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ck_p</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_CK_WIDTH&apos;))-1">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ck_p" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_cs_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_CS_WIDTH&apos;))-1">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_cs_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ChipSelect&apos;)) = true()() ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_dm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_DM_WIDTH&apos;))-1">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_dm" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_DataMask&apos;)) = true )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_dq</spirit:name>
        <spirit:wire>
          <spirit:direction>inout</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_DQ_WIDTH&apos;))-1">71</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_dq" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_dqs_n</spirit:name>
        <spirit:wire>
          <spirit:direction>inout</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_DQS_WIDTH&apos;))-1">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_dqs_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_dqs_p</spirit:name>
        <spirit:wire>
          <spirit:direction>inout</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_DQS_WIDTH&apos;))-1">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_dqs_p" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_odt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_ODT_WIDTH&apos;))-1">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_odt" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_parity</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_parity" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_MemoryType&apos;)) = &quot;RDIMMs&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ras_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ras_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_reset_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_reset_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_we_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_we_n" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot;) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ui_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ui_clk" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_ui_clk_sync_rst</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_ui_clk_sync_rst" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_en</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_en" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_hi_pri</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_hi_pri" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_wdf_end</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_wdf_end" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_wdf_wren</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_wdf_wren" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_correct_en_i</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_correct_en_i" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_rd_data_end</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_rd_data_end" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_rd_data_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_rd_data_valid" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_rdy" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_wdf_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_wdf_rdy" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_ref_req</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_ref_req" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_UserRefresh_ZQCS&apos;)) = true )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_ref_ack</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_ref_ack" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_UserRefresh_ZQCS&apos;)) = true )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_zq_req</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_zq_req" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_UserRefresh_ZQCS&apos;)) = true )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_zq_ack</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_zq_ack" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_UserRefresh_ZQCS&apos;)) = true )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_autoprecharge</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_autoprecharge" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AutoPrecharge&apos;)) = true )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.APP_ADDR_WIDTH&apos;))-1">28</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_addr" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_cmd</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_cmd" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_wdf_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.APP_DATA_WIDTH&apos;))-1">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_wdf_data" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_wdf_mask</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="2*spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_nCK_PER_CLK&apos;))*spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_DM_WIDTH&apos;))-1">71</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_wdf_mask" xilinx:dependency="(( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) ) &amp;&amp; (( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_DataMask&apos;))  = true ) || ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() )) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_rd_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C0.APP_DATA_WIDTH&apos;))-1">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_rd_data" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = false ) and ( spirit:decode(id(&apos;PARAM_VALUE.Phy_Only&apos;)) = &quot;Complete_Memory_Controller&quot; ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_aresetn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_aresetn" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_awvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_awvalid" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_awready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_awready" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_awaddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_awaddr" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_wvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_wvalid" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_wready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_wready" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_wdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_wdata" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_bvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_bvalid" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_bready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_bready" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_bresp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_bresp" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_arvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_arvalid" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_arready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_arready" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_araddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_araddr" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_rvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_rvalid" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_rready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_rready" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_rdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_rdata" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_ctrl_rresp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_ctrl_rresp" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_interrupt" xilinx:dependency="( ( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_ECC&apos;)) = true()() ))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_ID_WIDTH&apos;)))-1">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awaddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_ADDR_WIDTH&apos;)))-1">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awaddr" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awlen</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awlen" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awsize</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awsize" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awburst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awburst" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awlock</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awlock" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awcache</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awcache" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awprot</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awprot" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awqos</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awqos" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awvalid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_awready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_awready" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_wdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_DATA_WIDTH&apos;)))-1">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_wdata" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_wstrb</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_DATA_WIDTH&apos;)))/8-1">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_wstrb" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_wlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_wlast" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_wvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_wvalid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_wready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_wready" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_bready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_bready" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_bid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_ID_WIDTH&apos;)))-1">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_bid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_bresp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_bresp" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_bvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_bvalid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_ID_WIDTH&apos;)))-1">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_araddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_ADDR_WIDTH&apos;)))-1">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_araddr" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arlen</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arlen" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arsize</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arsize" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arburst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arburst" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arlock</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">0</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arlock" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arcache</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arcache" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arprot</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arprot" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arqos</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arqos" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arvalid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_arready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_arready" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_rready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_rready" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_rlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_rlast" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_rvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_rvalid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_rresp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_rresp" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_rid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_ID_WIDTH&apos;)))-1">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_rid" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_s_axi_rdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_AXI_DATA_WIDTH&apos;)))-1">511</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_s_axi_rdata" xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C0.ControllerType&apos;)) = &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_AxiSelection&apos;)) = true() )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_sref_req</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_sref_req" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SELF_REFRESH&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_sref_ack</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_sref_ack" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SELF_REFRESH&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_save_req</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_save_req" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SELF_REFRESH&apos;)) = false() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_save_ack</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_save_ack" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SELF_REFRESH&apos;)) = false() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_restore_en</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_restore_en" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_restore_complete</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_restore_complete" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_mem_init_skip</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_mem_init_skip" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SELF_REFRESH&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_select</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_select" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_rd_en</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_rd_en" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_wr_en</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_wr_en" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_addr" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_wr_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_wr_data" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_rd_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_rd_data" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_xsdb_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_xsdb_rdy" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_app_dbg_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_app_dbg_out" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_SAVE_RESTORE&apos;)) = true() () )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_error</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="2*spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_nCK_PER_CLK&apos;))*spirit:decode(id(&apos;MODELPARAM_VALUE.C0.DDR3_DQ_WIDTH&apos;))-1">575</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_error" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_wr_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_wr_done" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_status_err_bit_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_status_err_bit_valid" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_status_err_type_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_status_err_type_valid" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_status_err_type</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_status_err_type" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_status_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_status_done" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_status_watch_dog_hang</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_status_watch_dog_hang" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>win_start</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.win_start" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_clr_error</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_clr_error" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_start</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_start" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_rst</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_rst" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_err_chk_en</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_err_chk_en" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_instr_addr_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_instr_addr_mode" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_instr_data_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_instr_data_mode" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_instr_rw_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_instr_rw_mode" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_instr_rw_submode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_instr_rw_submode" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_instr_num_of_iter</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_instr_num_of_iter" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>traffic_instr_nxt_instr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.traffic_instr_nxt_instr" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>win_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.win_status" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.Example_TG&apos;)) = &quot;ADVANCED_TG&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>addn_ui_clkout1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.addn_ui_clkout1" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT1_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>addn_ui_clkout2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.addn_ui_clkout2" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT2_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>addn_ui_clkout3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.addn_ui_clkout3" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT3_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>addn_ui_clkout4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.addn_ui_clkout4" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.No_Controller&apos;)) > 0 ) &amp;&amp; ( spirit:decode(id(&apos;PARAM_VALUE.ADDN_UI_CLKOUT4_FREQ_HZ&apos;)) != &quot;NONE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_mcs_lmb_ce</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_mcs_lmb_ce" xilinx:dependency="(( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_MCS_ECC&apos;)) = true ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>c0_ddr3_mcs_lmb_ue</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.c0_ddr3_mcs_lmb_ue" xilinx:dependency="(( C0.ControllerType == &quot;DDR3_SDRAM&quot; ) and ( spirit:decode(id(&apos;PARAM_VALUE.C0.DDR3_MCS_ECC&apos;)) = true ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_rst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_elaborateports</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType">
        <spirit:name>C0.ControllerType</spirit:name>
        <spirit:displayName>ControllerType</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.ControllerType">DDR3_SDRAM</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.APP_ADDR_WIDTH</spirit:name>
        <spirit:displayName>App Address Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.APP_ADDR_WIDTH">29</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.MEM_TYPE</spirit:name>
        <spirit:displayName>MEM TYPE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.MEM_TYPE">DDR3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.BUFG_LOC_1</spirit:name>
        <spirit:displayName>BUFG LOC1</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.BUFG_LOC_1">X1Y46</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.BUFG_LOC_2</spirit:name>
        <spirit:displayName>BUFG LOC1</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.BUFG_LOC_2">X1Y7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.BUFG_DIV_LOC_1</spirit:name>
        <spirit:displayName>BUFG DIV LOC1</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.BUFG_DIV_LOC_1">X1Y7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.BUFG_DIV_LOC_2</spirit:name>
        <spirit:displayName>BUFG DIV LOC2</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.BUFG_DIV_LOC_2">X1Y6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.PBLOCK_SLICE_LOC</spirit:name>
        <spirit:displayName>PBLOCK SLICE LOC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.PBLOCK_SLICE_LOC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.PBLOCK_RAMB36_LOC</spirit:name>
        <spirit:displayName>PBLOCK RAMB36 LOC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.PBLOCK_RAMB36_LOC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.PBLOCK_RAMB18_LOC</spirit:name>
        <spirit:displayName>PBLOCK RAMB18 LOC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.PBLOCK_RAMB18_LOC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.PBLOCK_SLICE_LOC_SC</spirit:name>
        <spirit:displayName>PBLOCK SLICE LOC SC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.PBLOCK_SLICE_LOC_SC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.PBLOCK_RAMB36_LOC_SC</spirit:name>
        <spirit:displayName>PBLOCK RAMB36 LOC SC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.PBLOCK_RAMB36_LOC_SC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.PBLOCK_RAMB18_LOC_SC</spirit:name>
        <spirit:displayName>PBLOCK RAMB18 LOC SC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.PBLOCK_RAMB18_LOC_SC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.MMCM_IDX_BANK</spirit:name>
        <spirit:displayName>MMCM IDX BANK</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.MMCM_IDX_BANK">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.CENTER_BANK_CLOCK_REGION</spirit:name>
        <spirit:displayName>CENTER BANK CLOCK REGION</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.CENTER_BANK_CLOCK_REGION">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.CENTER_BANK_MMCME3_ADV_SITE</spirit:name>
        <spirit:displayName>CENTER BANK MMCME3 ADV SITE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.CENTER_BANK_MMCME3_ADV_SITE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.SYSCLK_CENTER_INFO</spirit:name>
        <spirit:displayName>SYSCLK CENTER INFO</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.SYSCLK_CENTER_INFO">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>PING_PONG_PHY</spirit:name>
        <spirit:displayName>Ping Pong Phy</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PING_PONG_PHY">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CS_ADDR</spirit:name>
        <spirit:displayName>CS Width Check</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CS_ADDR">29</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_VrefVoltage</spirit:name>
        <spirit:displayName>Vref Voltage</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_VrefVoltage">0.75</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_AL</spirit:name>
        <spirit:displayName>Additive Latency</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_AL">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DQ_WIDTH</spirit:name>
        <spirit:displayName>DQ WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DQ_WIDTH">72</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_nCK_PER_CLK</spirit:name>
        <spirit:displayName>nCK PER CLK</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_nCK_PER_CLK">4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DM_WIDTH</spirit:name>
        <spirit:displayName>DM WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DM_WIDTH">9</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DQS_WIDTH</spirit:name>
        <spirit:displayName>DQS WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DQS_WIDTH">9</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_nCS_PER_RANK</spirit:name>
        <spirit:displayName>nCS PER RANK</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_nCS_PER_RANK">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM_DEVICE_WIDTH</spirit:name>
        <spirit:displayName>MEM DEVICE WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM_DEVICE_WIDTH">72</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_USE_DM_PORT</spirit:name>
        <spirit:displayName>USE DM PORT</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_USE_DM_PORT">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_USE_CS_PORT</spirit:name>
        <spirit:displayName>USE CS PORT</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_USE_CS_PORT">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_ROW_WIDTH</spirit:name>
        <spirit:displayName>ROW WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_ROW_WIDTH">16</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_ADDR_WIDTH</spirit:name>
        <spirit:displayName>ADDR WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_ADDR_WIDTH">16</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_BANK_WIDTH</spirit:name>
        <spirit:displayName>BANK WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_BANK_WIDTH">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_BANK_GROUP_WIDTH</spirit:name>
        <spirit:displayName>BANK GROUP WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_BANK_GROUP_WIDTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CK_WIDTH</spirit:name>
        <spirit:displayName>CK WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CK_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CKE_WIDTH</spirit:name>
        <spirit:displayName>CKE WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CKE_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CS_WIDTH</spirit:name>
        <spirit:displayName>CS WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CS_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_ODT_WIDTH</spirit:name>
        <spirit:displayName>ODT WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_ODT_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEMORY_TYPE</spirit:name>
        <spirit:displayName>MEMORY TYPE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEMORY_TYPE">SODIMMs</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEMORY_PART</spirit:name>
        <spirit:displayName>MEMORY PART</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEMORY_PART">MT9KSF51272HZ-1G6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DATA_MASK</spirit:name>
        <spirit:displayName>DATA MASK</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DATA_MASK">9</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_COLUMN_WIDTH</spirit:name>
        <spirit:displayName>COLUMN WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_COLUMN_WIDTH">10</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_SPEED_GRADE</spirit:name>
        <spirit:displayName>SPEED GRADE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_SPEED_GRADE">125</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM_DENSITY</spirit:name>
        <spirit:displayName>MEM DENSITY</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM_DENSITY">4GB</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM_DENSITY_MB</spirit:name>
        <spirit:displayName>MEM DENSITY MB</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM_DENSITY_MB">4096</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM_DENSITY_GB</spirit:name>
        <spirit:displayName>MEM DENSITY GB</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM_DENSITY_GB">4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_COMP_DENSITY</spirit:name>
        <spirit:displayName>COMP DENSITY</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_COMP_DENSITY">4Gb</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM_COMP_WIDTH</spirit:name>
        <spirit:displayName>MEM COMP WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM_COMP_WIDTH">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DATABITS_PER_STROBE</spirit:name>
        <spirit:displayName>DATABITS PER STROBE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DATABITS_PER_STROBE">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_RANK_WIDTH</spirit:name>
        <spirit:displayName>RANK WIDTH</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_RANK_WIDTH">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_IO_VOLTAGE</spirit:name>
        <spirit:displayName>IO VOLTAGE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_IO_VOLTAGE">1.35V</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MIN_PERIOD</spirit:name>
        <spirit:displayName>MIN PERIOD</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MIN_PERIOD">1250</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MAX_PERIOD</spirit:name>
        <spirit:displayName>MAX PERIOD</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MAX_PERIOD">3300</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MR0</spirit:name>
        <spirit:displayName>Mode register_0 value</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MR0">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MR2</spirit:name>
        <spirit:displayName>Mode register_2 value</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MR2">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_nAL</spirit:name>
        <spirit:displayName>Additive Latency in number of clock</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_nAL">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_BURST_MODE</spirit:name>
        <spirit:displayName>Burst Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_BURST_MODE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_BURST_TYPE</spirit:name>
        <spirit:displayName>Burst Type</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_BURST_TYPE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CL</spirit:name>
        <spirit:displayName>Cas Latency</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CL">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CWL</spirit:name>
        <spirit:displayName>Cas Write Latency</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CWL">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_OUTPUT_DRV</spirit:name>
        <spirit:displayName>Output drive Strength</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_OUTPUT_DRV">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_RTT_NOM</spirit:name>
        <spirit:displayName>RTT Nominal</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_RTT_NOM">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_RTT_WR</spirit:name>
        <spirit:displayName>RTT WR</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_RTT_WR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM</spirit:name>
        <spirit:displayName>Memory Name</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DBAW</spirit:name>
        <spirit:displayName>DBAW</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DBAW">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tCK</spirit:name>
        <spirit:displayName>tCK</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tCK">1250</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_Configuration</spirit:name>
        <spirit:displayName>Configuration</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_Configuration">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tCKE</spirit:name>
        <spirit:displayName>tCKE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tCKE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tFAW</spirit:name>
        <spirit:displayName>tFAW</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tFAW">24</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tMRD</spirit:name>
        <spirit:displayName>tMRD</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tMRD">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRAS</spirit:name>
        <spirit:displayName>tRAS</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRAS">28</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRCD</spirit:name>
        <spirit:displayName>tRCD</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRCD">11</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tREFI</spirit:name>
        <spirit:displayName>tREFI</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tREFI">6240</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRFC</spirit:name>
        <spirit:displayName>tRFC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRFC">208</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRP</spirit:name>
        <spirit:displayName>tRP</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRP">11</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tWR</spirit:name>
        <spirit:displayName>tWR</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tWR">12</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRRD</spirit:name>
        <spirit:displayName>tRRD</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRRD">5</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRTP</spirit:name>
        <spirit:displayName>tRTP</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRTP">6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRRD_S</spirit:name>
        <spirit:displayName>tRRD_S</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRRD_S"/>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tRRD_L</spirit:name>
        <spirit:displayName>tRRD_L</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tRRD_L"/>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tWTR</spirit:name>
        <spirit:displayName>tWTR</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tWTR">6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tWTR_S</spirit:name>
        <spirit:displayName>tWTR_S</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tWTR_S"/>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tWTR_L</spirit:name>
        <spirit:displayName>tWTR_L</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tWTR_L"/>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tXPR</spirit:name>
        <spirit:displayName>tXPR</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tXPR">54</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tZQI</spirit:name>
        <spirit:displayName>tZQI</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tZQI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tZQCS</spirit:name>
        <spirit:displayName>tZQCS</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tZQCS">64</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_tZQINIT</spirit:name>
        <spirit:displayName>tZQINIT</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_tZQINIT">128</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CLKOUTPHY_MODE</spirit:name>
        <spirit:displayName>CLKOUTPHY_MODE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CLKOUTPHY_MODE">VCO_2X</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CLKOUT0_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT0_DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CLKOUT0_DIVIDE">7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CLKOUT1_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT1_DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CLKOUT1_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CLKFBOUT_MULT</spirit:name>
        <spirit:displayName>CLKFBOUT_MULT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CLKFBOUT_MULT">7</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DIVCLK_DIVIDE</spirit:name>
        <spirit:displayName>DIVCLK DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DIVCLK_DIVIDE">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CAL_INPUT_CLK_PERIOD</spirit:name>
        <spirit:displayName>Calculated Input Clock Period</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CAL_INPUT_CLK_PERIOD">2500</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CLKIN_PERIOD</spirit:name>
        <spirit:displayName>CLKIN_PERIOD</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CLKIN_PERIOD">2500</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_HR_MIN_FREQ</spirit:name>
        <spirit:displayName>High Range Supported frequency</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_HR_MIN_FREQ">1500</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_DCI_CASCADE_CUTOFF</spirit:name>
        <spirit:displayName>DCI Cascade Cutoff</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_DCI_CASCADE_CUTOFF">1071</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_IS_FASTER_SPEED_RAM</spirit:name>
        <spirit:displayName>Is Faster Speed RAM</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_IS_FASTER_SPEED_RAM">No</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_AXI_ID_WIDTH</spirit:name>
        <spirit:displayName>AXI ID Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_AXI_ID_WIDTH">4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_AXI_ADDR_WIDTH</spirit:name>
        <spirit:displayName>AXI Address Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_AXI_ADDR_WIDTH">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_AXI_DATA_WIDTH</spirit:name>
        <spirit:displayName>AXI Data Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_AXI_DATA_WIDTH">512</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MEM_SIZE</spirit:name>
        <spirit:displayName>Memory Size</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MEM_SIZE">4294967296</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_UI_CLOCK</spirit:name>
        <spirit:displayName>DDR3 UI CLOCK</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_UI_CLOCK">200000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_CA_MIRROR</spirit:name>
        <spirit:displayName>CA MIRROR</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_CA_MIRROR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_IS_CUSTOM</spirit:name>
        <spirit:displayName>IS CUSTOM</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_IS_CUSTOM">false</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_AUTO_AP_COL_A3</spirit:name>
        <spirit:displayName>AUTO AP COL A3</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_AUTO_AP_COL_A3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_MCS_ECC</spirit:name>
        <spirit:displayName>MCS ECC</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_MCS_ECC">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.DDR3_Slot</spirit:name>
        <spirit:displayName>Slot Type</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.DDR3_Slot">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>C0.APP_DATA_WIDTH</spirit:name>
        <spirit:displayName>APP Data Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C0.APP_DATA_WIDTH">512</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CUSTOM_PART_ATTRIBUTES</spirit:name>
        <spirit:displayName>custom_part_attributes</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CUSTOM_PART_ATTRIBUTES">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT1_FREQ_HZ</spirit:name>
        <spirit:displayName>CLKOUT1 FREQ HZ</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT1_FREQ_HZ">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT2_FREQ_HZ</spirit:name>
        <spirit:displayName>CLKOUT2 FREQ HZ</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT2_FREQ_HZ">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT3_FREQ_HZ</spirit:name>
        <spirit:displayName>CLKOUT3 FREQ HZ</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT3_FREQ_HZ">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT4_FREQ_HZ</spirit:name>
        <spirit:displayName>CLKOUT4 FREQ HZ</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT4_FREQ_HZ">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT1_PHASE</spirit:name>
        <spirit:displayName>CLKOUT1 PHASE</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT1_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT2_PHASE</spirit:name>
        <spirit:displayName>CLKOUT2 PHASE</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT2_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT3_PHASE</spirit:name>
        <spirit:displayName>CLKOUT3 PHASE</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT3_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>M_ADDN_UI_CLKOUT4_PHASE</spirit:name>
        <spirit:displayName>CLKOUT4 PHASE</spirit:displayName>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.M_ADDN_UI_CLKOUT4_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CLKOUT0_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT0 DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLKOUT0_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CLKOUT1_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT1 DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLKOUT1_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CLKOUT2_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT2 DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLKOUT2_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CLKOUT3_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT3 DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLKOUT3_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CLKOUT4_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT4 DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLKOUT4_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>CLKOUT6_DIVIDE</spirit:name>
        <spirit:displayName>CLKOUT6 DIVIDE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLKOUT6_DIVIDE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>Debug_Signal</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.Debug_Signal">Disable</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter>
        <spirit:name>Simulation_Mode</spirit:name>
        <spirit:displayName>Simulation Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.Simulation_Mode">0</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choice_list_02eda71a</spirit:name>
      <spirit:enumeration>DDR3_SDRAM</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_09ec3310</spirit:name>
      <spirit:enumeration>Single</spirit:enumeration>
      <spirit:enumeration>Dual</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_0be33969</spirit:name>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>3</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>5</spirit:enumeration>
      <spirit:enumeration>6</spirit:enumeration>
      <spirit:enumeration>7</spirit:enumeration>
      <spirit:enumeration>8</spirit:enumeration>
      <spirit:enumeration>9</spirit:enumeration>
      <spirit:enumeration>10</spirit:enumeration>
      <spirit:enumeration>11</spirit:enumeration>
      <spirit:enumeration>12</spirit:enumeration>
      <spirit:enumeration>13</spirit:enumeration>
      <spirit:enumeration>14</spirit:enumeration>
      <spirit:enumeration>15</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_26805873</spirit:name>
      <spirit:enumeration>Components</spirit:enumeration>
      <spirit:enumeration>UDIMMs</spirit:enumeration>
      <spirit:enumeration>SODIMMs</spirit:enumeration>
      <spirit:enumeration>RDIMMs</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_2b96b8de</spirit:name>
      <spirit:enumeration>Differential</spirit:enumeration>
      <spirit:enumeration>No_Buffer</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_2cd75442</spirit:name>
      <spirit:enumeration>1.35V</spirit:enumeration>
      <spirit:enumeration>1.5V</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_301b19dd</spirit:name>
      <spirit:enumeration>ON</spirit:enumeration>
      <spirit:enumeration>OFF</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_30636008</spirit:name>
      <spirit:enumeration>4:1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_4665eb01</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>3</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>5</spirit:enumeration>
      <spirit:enumeration>6</spirit:enumeration>
      <spirit:enumeration>7</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_4e3dbc0a</spirit:name>
      <spirit:enumeration>SIMPLE_TG</spirit:enumeration>
      <spirit:enumeration>ADVANCED_TG</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_67b045e5</spirit:name>
      <spirit:enumeration>BFM</spirit:enumeration>
      <spirit:enumeration>Unisim</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_6fc15197</spirit:name>
      <spirit:enumeration>32</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_8b4f223f</spirit:name>
      <spirit:enumeration>Strict</spirit:enumeration>
      <spirit:enumeration>Normal</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_98f5c8fa</spirit:name>
      <spirit:enumeration>RZQ/6</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_a187d5e4</spirit:name>
      <spirit:enumeration>512</spirit:enumeration>
      <spirit:enumeration>1024</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ac75ef1e</spirit:name>
      <spirit:enumeration>Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ac8b9e21</spirit:name>
      <spirit:enumeration>11</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ad101c66</spirit:name>
      <spirit:enumeration>RZQ/7</spirit:enumeration>
      <spirit:enumeration>RZQ/6</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c89503c8</spirit:name>
      <spirit:enumeration>ROW_BANK_COLUMN</spirit:enumeration>
      <spirit:enumeration>BANK_ROW_COLUMN</spirit:enumeration>
      <spirit:enumeration>ROW_COLUMN_BANK</spirit:enumeration>
      <spirit:enumeration>ROW_COLUMN_BANK_INTLV</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_cf4462a0</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>467</spirit:enumeration>
      <spirit:enumeration>350</spirit:enumeration>
      <spirit:enumeration>280</spirit:enumeration>
      <spirit:enumeration>233</spirit:enumeration>
      <spirit:enumeration>200</spirit:enumeration>
      <spirit:enumeration>175</spirit:enumeration>
      <spirit:enumeration>156</spirit:enumeration>
      <spirit:enumeration>140</spirit:enumeration>
      <spirit:enumeration>127</spirit:enumeration>
      <spirit:enumeration>117</spirit:enumeration>
      <spirit:enumeration>108</spirit:enumeration>
      <spirit:enumeration>100</spirit:enumeration>
      <spirit:enumeration>93</spirit:enumeration>
      <spirit:enumeration>88</spirit:enumeration>
      <spirit:enumeration>82</spirit:enumeration>
      <spirit:enumeration>78</spirit:enumeration>
      <spirit:enumeration>74</spirit:enumeration>
      <spirit:enumeration>70</spirit:enumeration>
      <spirit:enumeration>67</spirit:enumeration>
      <spirit:enumeration>64</spirit:enumeration>
      <spirit:enumeration>61</spirit:enumeration>
      <spirit:enumeration>58</spirit:enumeration>
      <spirit:enumeration>56</spirit:enumeration>
      <spirit:enumeration>54</spirit:enumeration>
      <spirit:enumeration>52</spirit:enumeration>
      <spirit:enumeration>50</spirit:enumeration>
      <spirit:enumeration>48</spirit:enumeration>
      <spirit:enumeration>47</spirit:enumeration>
      <spirit:enumeration>45</spirit:enumeration>
      <spirit:enumeration>44</spirit:enumeration>
      <spirit:enumeration>42</spirit:enumeration>
      <spirit:enumeration>41</spirit:enumeration>
      <spirit:enumeration>40</spirit:enumeration>
      <spirit:enumeration>39</spirit:enumeration>
      <spirit:enumeration>38</spirit:enumeration>
      <spirit:enumeration>37</spirit:enumeration>
      <spirit:enumeration>36</spirit:enumeration>
      <spirit:enumeration>35</spirit:enumeration>
      <spirit:enumeration>34</spirit:enumeration>
      <spirit:enumeration>33</spirit:enumeration>
      <spirit:enumeration>32</spirit:enumeration>
      <spirit:enumeration>31</spirit:enumeration>
      <spirit:enumeration>30</spirit:enumeration>
      <spirit:enumeration>29</spirit:enumeration>
      <spirit:enumeration>28</spirit:enumeration>
      <spirit:enumeration>27</spirit:enumeration>
      <spirit:enumeration>26</spirit:enumeration>
      <spirit:enumeration>25</spirit:enumeration>
      <spirit:enumeration>24</spirit:enumeration>
      <spirit:enumeration>23</spirit:enumeration>
      <spirit:enumeration>22</spirit:enumeration>
      <spirit:enumeration>21</spirit:enumeration>
      <spirit:enumeration>20</spirit:enumeration>
      <spirit:enumeration>19</spirit:enumeration>
      <spirit:enumeration>18</spirit:enumeration>
      <spirit:enumeration>17</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
      <spirit:enumeration>15</spirit:enumeration>
      <spirit:enumeration>14</spirit:enumeration>
      <spirit:enumeration>13</spirit:enumeration>
      <spirit:enumeration>12</spirit:enumeration>
      <spirit:enumeration>11</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d6556846</spirit:name>
      <spirit:enumeration>32</spirit:enumeration>
      <spirit:enumeration>64</spirit:enumeration>
      <spirit:enumeration>128</spirit:enumeration>
      <spirit:enumeration>256</spirit:enumeration>
      <spirit:enumeration>512</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d8920bdd</spirit:name>
      <spirit:enumeration>8</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_df7e3f8b</spirit:name>
      <spirit:enumeration>Sequential</spirit:enumeration>
      <spirit:enumeration>Interleaved</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ed30197c</spirit:name>
      <spirit:enumeration>TDM</spirit:enumeration>
      <spirit:enumeration>ROUND_ROBIN</spirit:enumeration>
      <spirit:enumeration>RD_PRI_REG</spirit:enumeration>
      <spirit:enumeration>RD_PRI_REG_STARVE_LIMIT</spirit:enumeration>
      <spirit:enumeration>WRITE_PRIORITY_REG</spirit:enumeration>
      <spirit:enumeration>WRITE_PRIORITY</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ef319ec8</spirit:name>
      <spirit:enumeration>Differential</spirit:enumeration>
      <spirit:enumeration>Single_Ended</spirit:enumeration>
      <spirit:enumeration>No_Buffer</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_f3cd92fb</spirit:name>
      <spirit:enumeration>Disable</spirit:enumeration>
      <spirit:enumeration>Enable</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_fa6d21b8</spirit:name>
      <spirit:enumeration>MT8JTF51264HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT8JTF25664HZ-1G4</spirit:enumeration>
      <spirit:enumeration>MT4JTF12864HZ-1G4</spirit:enumeration>
      <spirit:enumeration>MT8MTF51264HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT8KTF25664HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT8KTF25664HZ-1G4</spirit:enumeration>
      <spirit:enumeration>MT8KTF12864HZ-1G4</spirit:enumeration>
      <spirit:enumeration>MT16KTF1G64HZ-1G9</spirit:enumeration>
      <spirit:enumeration>MT16KTF1G64HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT8KTF51264HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT9KSF51272HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT18KSF1G72HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT18KSF2G72HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT16KTF2G64HZ-1G6</spirit:enumeration>
      <spirit:enumeration>MT4KTF25664HZ-1G9</spirit:enumeration>
      <spirit:enumeration>MT8KTF51264HZ-1G9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_fe2d3253</spirit:name>
      <spirit:enumeration>72</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ff0950bb</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>CL-1</spirit:enumeration>
      <spirit:enumeration>CL-2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_01257c99</spirit:name>
      <spirit:enumeration spirit:text="Controller_and_physical_layer">Complete_Memory_Controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Physical_Layer_Only">Phy_Only_Single</spirit:enumeration>
      <spirit:enumeration spirit:text="Physical_Layer_PingPong">Phy_Only_PingPong</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_13f72169</spirit:name>
      <spirit:enumeration spirit:text="14000 (71.4286Mhz)">14000</spirit:enumeration>
      <spirit:enumeration spirit:text="13999 (71.4286Mhz)">13999</spirit:enumeration>
      <spirit:enumeration spirit:text="13573 (73.6811Mhz)">13573</spirit:enumeration>
      <spirit:enumeration spirit:text="13572 (73.6811Mhz)">13572</spirit:enumeration>
      <spirit:enumeration spirit:text="13000 (76.9231Mhz)">13000</spirit:enumeration>
      <spirit:enumeration spirit:text="12999 (76.9231Mhz)">12999</spirit:enumeration>
      <spirit:enumeration spirit:text="12859 (77.7726Mhz)">12859</spirit:enumeration>
      <spirit:enumeration spirit:text="12858 (77.7726Mhz)">12858</spirit:enumeration>
      <spirit:enumeration spirit:text="12000 (83.3333Mhz)">12000</spirit:enumeration>
      <spirit:enumeration spirit:text="11999 (83.3333Mhz)">11999</spirit:enumeration>
      <spirit:enumeration spirit:text="11001 (90.9091Mhz)">11001</spirit:enumeration>
      <spirit:enumeration spirit:text="11000 (90.9091Mhz)">11000</spirit:enumeration>
      <spirit:enumeration spirit:text="10716 (93.3271Mhz)">10716</spirit:enumeration>
      <spirit:enumeration spirit:text="10715 (93.3333Mhz)">10715</spirit:enumeration>
      <spirit:enumeration spirit:text="10714 (93.3333Mhz)">10714</spirit:enumeration>
      <spirit:enumeration spirit:text="10000 (100Mhz)">10000</spirit:enumeration>
      <spirit:enumeration spirit:text="9000 (111.111Mhz)">9000</spirit:enumeration>
      <spirit:enumeration spirit:text="8999 (111.111Mhz)">8999</spirit:enumeration>
      <spirit:enumeration spirit:text="8000 (125Mhz)">8000</spirit:enumeration>
      <spirit:enumeration spirit:text="7859 (127.259Mhz)">7859</spirit:enumeration>
      <spirit:enumeration spirit:text="7858 (127.259Mhz)">7858</spirit:enumeration>
      <spirit:enumeration spirit:text="7143 (140Mhz)">7143</spirit:enumeration>
      <spirit:enumeration spirit:text="7142 (140Mhz)">7142</spirit:enumeration>
      <spirit:enumeration spirit:text="7085 (141.163Mhz)">7085</spirit:enumeration>
      <spirit:enumeration spirit:text="7084 (141.176Mhz)">7084</spirit:enumeration>
      <spirit:enumeration spirit:text="7083 (141.176Mhz)">7083</spirit:enumeration>
      <spirit:enumeration spirit:text="7000 (142.857Mhz)">7000</spirit:enumeration>
      <spirit:enumeration spirit:text="6999 (142.857Mhz)">6999</spirit:enumeration>
      <spirit:enumeration spirit:text="6430 (155.545Mhz)">6430</spirit:enumeration>
      <spirit:enumeration spirit:text="6429 (155.556Mhz)">6429</spirit:enumeration>
      <spirit:enumeration spirit:text="6428 (155.556Mhz)">6428</spirit:enumeration>
      <spirit:enumeration spirit:text="6072 (164.69Mhz)">6072</spirit:enumeration>
      <spirit:enumeration spirit:text="6071 (164.69Mhz)">6071</spirit:enumeration>
      <spirit:enumeration spirit:text="6000 (166.667Mhz)">6000</spirit:enumeration>
      <spirit:enumeration spirit:text="5999 (166.667Mhz)">5999</spirit:enumeration>
      <spirit:enumeration spirit:text="5835 (171.409Mhz)">5835</spirit:enumeration>
      <spirit:enumeration spirit:text="5834 (171.409Mhz)">5834</spirit:enumeration>
      <spirit:enumeration spirit:text="5715 (174.978Mhz)">5715</spirit:enumeration>
      <spirit:enumeration spirit:text="5714 (174.978Mhz)">5714</spirit:enumeration>
      <spirit:enumeration spirit:text="5501 (181.818Mhz)">5501</spirit:enumeration>
      <spirit:enumeration spirit:text="5500 (181.818Mhz)">5500</spirit:enumeration>
      <spirit:enumeration spirit:text="5418 (184.604Mhz)">5418</spirit:enumeration>
      <spirit:enumeration spirit:text="5417 (184.615Mhz)">5417</spirit:enumeration>
      <spirit:enumeration spirit:text="5416 (184.615Mhz)">5416</spirit:enumeration>
      <spirit:enumeration spirit:text="5358 (186.667Mhz)">5358</spirit:enumeration>
      <spirit:enumeration spirit:text="5357 (186.667Mhz)">5357</spirit:enumeration>
      <spirit:enumeration spirit:text="5000 (200Mhz)">5000</spirit:enumeration>
      <spirit:enumeration spirit:text="4724 (211.73Mhz)">4724</spirit:enumeration>
      <spirit:enumeration spirit:text="4723 (211.73Mhz)">4723</spirit:enumeration>
      <spirit:enumeration spirit:text="4722 (211.765Mhz)">4722</spirit:enumeration>
      <spirit:enumeration spirit:text="4667 (214.286Mhz)">4667</spirit:enumeration>
      <spirit:enumeration spirit:text="4666 (214.286Mhz)">4666</spirit:enumeration>
      <spirit:enumeration spirit:text="4585 (218.15Mhz)">4585</spirit:enumeration>
      <spirit:enumeration spirit:text="4584 (218.182Mhz)">4584</spirit:enumeration>
      <spirit:enumeration spirit:text="4583 (218.182Mhz)">4583</spirit:enumeration>
      <spirit:enumeration spirit:text="4500 (222.222Mhz)">4500</spirit:enumeration>
      <spirit:enumeration spirit:text="4499 (222.222Mhz)">4499</spirit:enumeration>
      <spirit:enumeration spirit:text="4446 (224.972Mhz)">4446</spirit:enumeration>
      <spirit:enumeration spirit:text="4445 (224.972Mhz)">4445</spirit:enumeration>
      <spirit:enumeration spirit:text="4334 (230.734Mhz)">4334</spirit:enumeration>
      <spirit:enumeration spirit:text="4333 (230.734Mhz)">4333</spirit:enumeration>
      <spirit:enumeration spirit:text="4286 (233.333Mhz)">4286</spirit:enumeration>
      <spirit:enumeration spirit:text="4285 (233.333Mhz)">4285</spirit:enumeration>
      <spirit:enumeration spirit:text="4000 (250Mhz)">4000</spirit:enumeration>
      <spirit:enumeration spirit:text="3930 (254.518Mhz)">3930</spirit:enumeration>
      <spirit:enumeration spirit:text="3929 (254.518Mhz)">3929</spirit:enumeration>
      <spirit:enumeration spirit:text="3810 (262.467Mhz)">3810</spirit:enumeration>
      <spirit:enumeration spirit:text="3809 (262.467Mhz)">3809</spirit:enumeration>
      <spirit:enumeration spirit:text="3667 (272.727Mhz)">3667</spirit:enumeration>
      <spirit:enumeration spirit:text="3666 (272.727Mhz)">3666</spirit:enumeration>
      <spirit:enumeration spirit:text="3612 (276.923Mhz)">3612</spirit:enumeration>
      <spirit:enumeration spirit:text="3611 (276.923Mhz)">3611</spirit:enumeration>
      <spirit:enumeration spirit:text="3573 (279.955Mhz)">3573</spirit:enumeration>
      <spirit:enumeration spirit:text="3572 (279.955Mhz)">3572</spirit:enumeration>
      <spirit:enumeration spirit:text="3571 (280Mhz)">3571</spirit:enumeration>
      <spirit:enumeration spirit:text="3543 (282.326Mhz)">3543</spirit:enumeration>
      <spirit:enumeration spirit:text="3542 (282.326Mhz)">3542</spirit:enumeration>
      <spirit:enumeration spirit:text="3541 (282.353Mhz)">3541</spirit:enumeration>
      <spirit:enumeration spirit:text="3500 (285.714Mhz)">3500</spirit:enumeration>
      <spirit:enumeration spirit:text="3499 (285.714Mhz)">3499</spirit:enumeration>
      <spirit:enumeration spirit:text="3335 (299.94Mhz)">3335</spirit:enumeration>
      <spirit:enumeration spirit:text="3334 (300Mhz)">3334</spirit:enumeration>
      <spirit:enumeration spirit:text="3333 (300Mhz)">3333</spirit:enumeration>
      <spirit:enumeration spirit:text="3215 (311.042Mhz)">3215</spirit:enumeration>
      <spirit:enumeration spirit:text="3214 (311.042Mhz)">3214</spirit:enumeration>
      <spirit:enumeration spirit:text="3057 (327.225Mhz)">3057</spirit:enumeration>
      <spirit:enumeration spirit:text="3056 (327.225Mhz)">3056</spirit:enumeration>
      <spirit:enumeration spirit:text="3055 (327.273Mhz)">3055</spirit:enumeration>
      <spirit:enumeration spirit:text="3036 (329.381Mhz)">3036</spirit:enumeration>
      <spirit:enumeration spirit:text="3035 (329.381Mhz)">3035</spirit:enumeration>
      <spirit:enumeration spirit:text="3000 (333.333Mhz)">3000</spirit:enumeration>
      <spirit:enumeration spirit:text="2999 (333.333Mhz)">2999</spirit:enumeration>
      <spirit:enumeration spirit:text="2918 (342.818Mhz)">2918</spirit:enumeration>
      <spirit:enumeration spirit:text="2917 (342.818Mhz)">2917</spirit:enumeration>
      <spirit:enumeration spirit:text="2859 (349.895Mhz)">2859</spirit:enumeration>
      <spirit:enumeration spirit:text="2858 (349.895Mhz)">2858</spirit:enumeration>
      <spirit:enumeration spirit:text="2857 (350Mhz)">2857</spirit:enumeration>
      <spirit:enumeration spirit:text="2801 (357.143Mhz)">2801</spirit:enumeration>
      <spirit:enumeration spirit:text="2800 (357.143Mhz)">2800</spirit:enumeration>
      <spirit:enumeration spirit:text="2779 (359.971Mhz)">2779</spirit:enumeration>
      <spirit:enumeration spirit:text="2778 (359.971Mhz)">2778</spirit:enumeration>
      <spirit:enumeration spirit:text="2751 (363.636Mhz)">2751</spirit:enumeration>
      <spirit:enumeration spirit:text="2750 (363.636Mhz)">2750</spirit:enumeration>
      <spirit:enumeration spirit:text="2709 (369.231Mhz)">2709</spirit:enumeration>
      <spirit:enumeration spirit:text="2708 (369.231Mhz)">2708</spirit:enumeration>
      <spirit:enumeration spirit:text="2679 (373.333Mhz)">2679</spirit:enumeration>
      <spirit:enumeration spirit:text="2678 (373.333Mhz)">2678</spirit:enumeration>
      <spirit:enumeration spirit:text="2668 (374.953Mhz)">2668</spirit:enumeration>
      <spirit:enumeration spirit:text="2667 (375Mhz)">2667</spirit:enumeration>
      <spirit:enumeration spirit:text="2666 (375Mhz)">2666</spirit:enumeration>
      <spirit:enumeration spirit:text="2600 (384.615Mhz)">2600</spirit:enumeration>
      <spirit:enumeration spirit:text="2599 (384.615Mhz)">2599</spirit:enumeration>
      <spirit:enumeration spirit:text="2500 (400Mhz)">2500</spirit:enumeration>
      <spirit:enumeration spirit:text="2401 (416.667Mhz)">2401</spirit:enumeration>
      <spirit:enumeration spirit:text="2400 (416.667Mhz)">2400</spirit:enumeration>
      <spirit:enumeration spirit:text="2381 (420Mhz)">2381</spirit:enumeration>
      <spirit:enumeration spirit:text="2380 (420Mhz)">2380</spirit:enumeration>
      <spirit:enumeration spirit:text="2362 (423.529Mhz)">2362</spirit:enumeration>
      <spirit:enumeration spirit:text="2361 (423.529Mhz)">2361</spirit:enumeration>
      <spirit:enumeration spirit:text="2334 (428.571Mhz)">2334</spirit:enumeration>
      <spirit:enumeration spirit:text="2333 (428.571Mhz)">2333</spirit:enumeration>
      <spirit:enumeration spirit:text="2292 (436.364Mhz)">2292</spirit:enumeration>
      <spirit:enumeration spirit:text="2291 (436.364Mhz)">2291</spirit:enumeration>
      <spirit:enumeration spirit:text="2250 (444.444Mhz)">2250</spirit:enumeration>
      <spirit:enumeration spirit:text="2249 (444.444Mhz)">2249</spirit:enumeration>
      <spirit:enumeration spirit:text="2201 (454.545Mhz)">2201</spirit:enumeration>
      <spirit:enumeration spirit:text="2200 (454.545Mhz)">2200</spirit:enumeration>
      <spirit:enumeration spirit:text="2143 (466.667Mhz)">2143</spirit:enumeration>
      <spirit:enumeration spirit:text="2142 (466.667Mhz)">2142</spirit:enumeration>
      <spirit:enumeration spirit:text="2041 (490Mhz)">2041</spirit:enumeration>
      <spirit:enumeration spirit:text="2040 (490Mhz)">2040</spirit:enumeration>
      <spirit:enumeration spirit:text="2000 (500Mhz)">2000</spirit:enumeration>
      <spirit:enumeration spirit:text="1939 (515.789Mhz)">1939</spirit:enumeration>
      <spirit:enumeration spirit:text="1938 (515.789Mhz)">1938</spirit:enumeration>
      <spirit:enumeration spirit:text="1905 (524.934Mhz)">1905</spirit:enumeration>
      <spirit:enumeration spirit:text="1904 (524.934Mhz)">1904</spirit:enumeration>
      <spirit:enumeration spirit:text="1837 (544.444Mhz)">1837</spirit:enumeration>
      <spirit:enumeration spirit:text="1836 (544.444Mhz)">1836</spirit:enumeration>
      <spirit:enumeration spirit:text="1834 (545.455Mhz)">1834</spirit:enumeration>
      <spirit:enumeration spirit:text="1833 (545.455Mhz)">1833</spirit:enumeration>
      <spirit:enumeration spirit:text="1806 (553.846Mhz)">1806</spirit:enumeration>
      <spirit:enumeration spirit:text="1805 (553.846Mhz)">1805</spirit:enumeration>
      <spirit:enumeration spirit:text="1801 (555.556Mhz)">1801</spirit:enumeration>
      <spirit:enumeration spirit:text="1800 (555.556Mhz)">1800</spirit:enumeration>
      <spirit:enumeration spirit:text="1787 (559.91Mhz)">1787</spirit:enumeration>
      <spirit:enumeration spirit:text="1786 (559.91Mhz)">1786</spirit:enumeration>
      <spirit:enumeration spirit:text="1785 (560Mhz)">1785</spirit:enumeration>
      <spirit:enumeration spirit:text="1771 (564.706Mhz)">1771</spirit:enumeration>
      <spirit:enumeration spirit:text="1770 (564.706Mhz)">1770</spirit:enumeration>
      <spirit:enumeration spirit:text="1750 (571.429Mhz)">1750</spirit:enumeration>
      <spirit:enumeration spirit:text="1749 (571.429Mhz)">1749</spirit:enumeration>
      <spirit:enumeration spirit:text="1735 (576.471Mhz)">1735</spirit:enumeration>
      <spirit:enumeration spirit:text="1734 (576.471Mhz)">1734</spirit:enumeration>
      <spirit:enumeration spirit:text="1715 (583.333Mhz)">1715</spirit:enumeration>
      <spirit:enumeration spirit:text="1714 (583.333Mhz)">1714</spirit:enumeration>
      <spirit:enumeration spirit:text="1668 (599.88Mhz)">1668</spirit:enumeration>
      <spirit:enumeration spirit:text="1667 (600Mhz)">1667</spirit:enumeration>
      <spirit:enumeration spirit:text="1666 (600Mhz)">1666</spirit:enumeration>
      <spirit:enumeration spirit:text="1633 (612.5Mhz)">1633</spirit:enumeration>
      <spirit:enumeration spirit:text="1632 (612.5Mhz)">1632</spirit:enumeration>
      <spirit:enumeration spirit:text="1608 (622.222Mhz)">1608</spirit:enumeration>
      <spirit:enumeration spirit:text="1607 (622.222Mhz)">1607</spirit:enumeration>
      <spirit:enumeration spirit:text="1600 (625Mhz)">1600</spirit:enumeration>
      <spirit:enumeration spirit:text="1575 (635.294Mhz)">1575</spirit:enumeration>
      <spirit:enumeration spirit:text="1574 (635.294Mhz)">1574</spirit:enumeration>
      <spirit:enumeration spirit:text="1572 (636.364Mhz)">1572</spirit:enumeration>
      <spirit:enumeration spirit:text="1571 (636.364Mhz)">1571</spirit:enumeration>
      <spirit:enumeration spirit:text="1556 (642.857Mhz)">1556</spirit:enumeration>
      <spirit:enumeration spirit:text="1555 (642.857Mhz)">1555</spirit:enumeration>
      <spirit:enumeration spirit:text="1531 (653.333Mhz)">1531</spirit:enumeration>
      <spirit:enumeration spirit:text="1530 (653.333Mhz)">1530</spirit:enumeration>
      <spirit:enumeration spirit:text="1528 (654.545Mhz)">1528</spirit:enumeration>
      <spirit:enumeration spirit:text="1527 (654.545Mhz)">1527</spirit:enumeration>
      <spirit:enumeration spirit:text="1500 (666.667Mhz)">1500</spirit:enumeration>
      <spirit:enumeration spirit:text="1499 (666.667Mhz)">1499</spirit:enumeration>
      <spirit:enumeration spirit:text="1429 (700Mhz)">1429</spirit:enumeration>
      <spirit:enumeration spirit:text="1428 (700Mhz)">1428</spirit:enumeration>
      <spirit:enumeration spirit:text="1417 (705.882Mhz)">1417</spirit:enumeration>
      <spirit:enumeration spirit:text="1416 (705.882Mhz)">1416</spirit:enumeration>
      <spirit:enumeration spirit:text="1401 (714.286Mhz)">1401</spirit:enumeration>
      <spirit:enumeration spirit:text="1400 (714.286Mhz)">1400</spirit:enumeration>
      <spirit:enumeration spirit:text="1390 (719.942Mhz)">1390</spirit:enumeration>
      <spirit:enumeration spirit:text="1389 (719.942Mhz)">1389</spirit:enumeration>
      <spirit:enumeration spirit:text="1376 (727.273Mhz)">1376</spirit:enumeration>
      <spirit:enumeration spirit:text="1375 (727.273Mhz)">1375</spirit:enumeration>
      <spirit:enumeration spirit:text="1355 (738.462Mhz)">1355</spirit:enumeration>
      <spirit:enumeration spirit:text="1354 (738.462Mhz)">1354</spirit:enumeration>
      <spirit:enumeration spirit:text="1340 (746.667Mhz)">1340</spirit:enumeration>
      <spirit:enumeration spirit:text="1339 (746.667Mhz)">1339</spirit:enumeration>
      <spirit:enumeration spirit:text="1334 (750Mhz)">1334</spirit:enumeration>
      <spirit:enumeration spirit:text="1333 (750Mhz)">1333</spirit:enumeration>
      <spirit:enumeration spirit:text="1327 (753.846Mhz)">1327</spirit:enumeration>
      <spirit:enumeration spirit:text="1326 (753.846Mhz)">1326</spirit:enumeration>
      <spirit:enumeration spirit:text="1300 (769.231Mhz)">1300</spirit:enumeration>
      <spirit:enumeration spirit:text="1299 (769.231Mhz)">1299</spirit:enumeration>
      <spirit:enumeration spirit:text="1286 (777.778Mhz)">1286</spirit:enumeration>
      <spirit:enumeration spirit:text="1285 (777.778Mhz)">1285</spirit:enumeration>
      <spirit:enumeration spirit:text="1273 (785.714Mhz)">1273</spirit:enumeration>
      <spirit:enumeration spirit:text="1272 (785.714Mhz)">1272</spirit:enumeration>
      <spirit:enumeration spirit:text="1270 (787.5Mhz)">1270</spirit:enumeration>
      <spirit:enumeration spirit:text="1269 (787.5Mhz)">1269</spirit:enumeration>
      <spirit:enumeration spirit:text="1250 (800Mhz)">1250</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_elaboratesubcores_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>ip_0/system_ddr3_0_0_microblaze_mcs.xci</spirit:name>
        <spirit:userFileType>xci</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>ip_0/system_ddr3_0_0_microblaze_mcs.xml</spirit:name>
        <spirit:userFileType>xml</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>ip_1/system_ddr3_0_0_phy.xci</spirit:name>
        <spirit:userFileType>xci</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>ip_1/system_ddr3_0_0_phy.xml</spirit:name>
        <spirit:userFileType>xml</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>Memory Interface Generator for generating DDR3 interfaces for Ultrascale Architecture</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>C0.ControllerType</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.ControllerType" spirit:choiceRef="choice_list_02eda71a" spirit:order="2">DDR3_SDRAM</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.ControllerType">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>IOPowerReduction</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.IOPowerReduction" spirit:choiceRef="choice_list_301b19dd" spirit:order="3">OFF</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Enable_SysPorts</spirit:name>
      <spirit:displayName>Auto assign static ports</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.Enable_SysPorts" spirit:order="4">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Phy_Only</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Phy_Only" spirit:choiceRef="choice_pairs_01257c99" spirit:order="5">Complete_Memory_Controller</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.Phy_Only">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RESET_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.RESET_BOARD_INTERFACE" spirit:choiceRef="choice_list_ac75ef1e" spirit:order="6">Custom</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.RESET_BOARD_INTERFACE">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0_CLOCK_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0_CLOCK_BOARD_INTERFACE" spirit:choiceRef="choice_list_ac75ef1e" spirit:order="7">Custom</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.C0_CLOCK_BOARD_INTERFACE">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>IS_FROM_PHY</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.IS_FROM_PHY" spirit:order="8">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RECONFIG_XSDB_SAVE_RESTORE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.RECONFIG_XSDB_SAVE_RESTORE" spirit:order="9">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AL_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AL_SEL" spirit:choiceRef="choice_list_ff0950bb" spirit:order="10">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Example_TG</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Example_TG" spirit:choiceRef="choice_list_4e3dbc0a" spirit:order="11">SIMPLE_TG</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.Example_TG">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TIMING_OP1</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.TIMING_OP1" spirit:order="12">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TIMING_OP2</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.TIMING_OP2" spirit:order="13">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DIFF_TERM_SYSCLK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.DIFF_TERM_SYSCLK" spirit:order="14">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0_DDR3_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0_DDR3_BOARD_INTERFACE" spirit:choiceRef="choice_list_ac75ef1e" spirit:order="15">Custom</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.C0_DDR3_BOARD_INTERFACE">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_TimePeriod</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_TimePeriod" spirit:order="16" spirit:minimum="938" spirit:maximum="3300" spirit:rangeType="long">1250</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_InputClockPeriod</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_InputClockPeriod" spirit:choiceRef="choice_pairs_13f72169" spirit:order="17">2500</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_Specify_MandD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_Specify_MandD" spirit:order="18">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_CLKFBOUT_MULT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_CLKFBOUT_MULT" spirit:order="19" spirit:minimum="0" spirit:maximum="5000" spirit:rangeType="long">7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_CLKFBOUT_MULT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_DIVCLK_DIVIDE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_DIVCLK_DIVIDE" spirit:order="20" spirit:minimum="0" spirit:maximum="5000" spirit:rangeType="long">2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_DIVCLK_DIVIDE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_CLKOUT0_DIVIDE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_CLKOUT0_DIVIDE" spirit:order="21" spirit:minimum="0" spirit:maximum="5000" spirit:rangeType="long">7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_CLKOUT0_DIVIDE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_PhyClockRatio</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_PhyClockRatio" spirit:choiceRef="choice_list_30636008" spirit:order="22">4:1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_MemoryType</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_MemoryType" spirit:choiceRef="choice_list_26805873" spirit:order="23">SODIMMs</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_MemoryPart</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_MemoryPart" spirit:choiceRef="choice_list_fa6d21b8" spirit:order="24">MT9KSF51272HZ-1G6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_Slot</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_Slot" spirit:choiceRef="choice_list_09ec3310" spirit:order="25">Single</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_MemoryVoltage</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_MemoryVoltage" spirit:choiceRef="choice_list_2cd75442" spirit:order="26">1.5V</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_DataWidth</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_DataWidth" spirit:choiceRef="choice_list_fe2d3253" spirit:order="27">72</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_DataMask</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_DataMask" spirit:order="28">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_DataMask">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_Ecc</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_Ecc" spirit:order="29">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_Ecc">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_MCS_ECC</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_MCS_ECC" spirit:order="30">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AxiSelection</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AxiSelection" spirit:order="31">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_AxiSelection">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AUTO_AP_COL_A3</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AUTO_AP_COL_A3" spirit:order="32">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_Ordering</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_Ordering" spirit:choiceRef="choice_list_8b4f223f" spirit:order="33">Normal</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_BurstLength</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_BurstLength" spirit:choiceRef="choice_list_d8920bdd" spirit:order="34">8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_BurstLength">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_BurstType</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_BurstType" spirit:choiceRef="choice_list_df7e3f8b" spirit:order="35">Sequential</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_OutputDriverImpedenceControl</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_OutputDriverImpedenceControl" spirit:choiceRef="choice_list_ad101c66" spirit:order="36">RZQ/7</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_OnDieTermination</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_OnDieTermination" spirit:choiceRef="choice_list_98f5c8fa" spirit:order="37">RZQ/6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_CasLatency</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_CasLatency" spirit:choiceRef="choice_list_ac8b9e21" spirit:order="38">11</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_CasWriteLatency</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_CasWriteLatency" spirit:choiceRef="choice_list_d8920bdd" spirit:order="39">8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_ChipSelect</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_ChipSelect" spirit:order="40">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_isCKEShared</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_isCKEShared" spirit:order="41">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_SELF_REFRESH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_SELF_REFRESH" spirit:order="42">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_SAVE_RESTORE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_SAVE_RESTORE" spirit:order="43">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AxiDataWidth</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AxiDataWidth" spirit:choiceRef="choice_list_d6556846" spirit:order="44">512</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AxiArbitrationScheme</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AxiArbitrationScheme" spirit:choiceRef="choice_list_ed30197c" spirit:order="45">WRITE_PRIORITY_REG</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AxiNarrowBurst</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AxiNarrowBurst" spirit:order="46">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AxiAddressWidth</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AxiAddressWidth" spirit:choiceRef="choice_list_6fc15197" spirit:order="47">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AxiIDWidth</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AxiIDWidth" spirit:choiceRef="choice_list_0be33969" spirit:order="48">4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_Capacity</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_Capacity" spirit:choiceRef="choice_list_a187d5e4" spirit:order="49">512</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_Mem_Add_Map</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_Mem_Add_Map" spirit:choiceRef="choice_list_c89503c8" spirit:order="50">BANK_ROW_COLUMN</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_MemoryName</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_MemoryName" spirit:order="51">MainMemory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_AutoPrecharge</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_AutoPrecharge" spirit:order="52">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_AutoPrecharge">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_UserRefresh_ZQCS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_UserRefresh_ZQCS" spirit:order="53">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_CustomParts</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_CustomParts" spirit:order="54">no_file_loaded</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:parameterType>file_csv</xilinx:parameterType>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.C0.DDR3_CustomParts">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>C0.DDR3_isCustom</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.C0.DDR3_isCustom" spirit:order="55">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ADDN_UI_CLKOUT1_FREQ_HZ</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ADDN_UI_CLKOUT1_FREQ_HZ" spirit:choiceRef="choice_list_cf4462a0" spirit:order="56">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ADDN_UI_CLKOUT2_FREQ_HZ</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ADDN_UI_CLKOUT2_FREQ_HZ" spirit:choiceRef="choice_list_cf4462a0" spirit:order="57">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ADDN_UI_CLKOUT3_FREQ_HZ</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ADDN_UI_CLKOUT3_FREQ_HZ" spirit:choiceRef="choice_list_cf4462a0" spirit:order="58">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ADDN_UI_CLKOUT4_FREQ_HZ</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ADDN_UI_CLKOUT4_FREQ_HZ" spirit:choiceRef="choice_list_cf4462a0" spirit:order="59">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>CLKOUT6</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.CLKOUT6" spirit:order="60">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">system_ddr3_0_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>No_Controller</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.No_Controller" spirit:choiceRef="choice_list_4665eb01" spirit:order="100">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>System_Clock</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.System_Clock" spirit:choiceRef="choice_list_2b96b8de" spirit:order="200">Differential</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Reference_Clock</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Reference_Clock" spirit:choiceRef="choice_list_ef319ec8" spirit:order="300">Differential</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Debug_Signal</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Debug_Signal" spirit:choiceRef="choice_list_f3cd92fb" spirit:order="400">Disable</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>IO_Power_Reduction</spirit:name>
      <spirit:displayName>IO_Power_Reduction</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.IO_Power_Reduction" spirit:order="500">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DCI_Cascade</spirit:name>
      <spirit:displayName>DCI Cascade</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.DCI_Cascade" spirit:order="600">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Default_Bank_Selections</spirit:name>
      <spirit:displayName>Default Bank Selections</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.Default_Bank_Selections" spirit:order="700">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Simulation_Mode</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Simulation_Mode" spirit:choiceRef="choice_list_67b045e5" spirit:order="800">BFM</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PARTIAL_RECONFIG_FLOW_MIG</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.PARTIAL_RECONFIG_FLOW_MIG" spirit:order="801">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PARTIAL_RECONFIG_FLOW_MIG">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Internal_Vref</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.Internal_Vref" spirit:order="802">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MCS_DBG_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.MCS_DBG_EN" spirit:order="803">false</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:displayName>DDR3 SDRAM (MIG)</xilinx:displayName>
      <xilinx:coreRevision>3</xilinx:coreRevision>
      <xilinx:configElementInfos>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.AXI_ARBITRATION_SCHEME" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.BURST_LENGTH" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.CAN_DEBUG" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.CAS_LATENCY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.CAS_WRITE_LATENCY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.CS_ENABLED" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.CUSTOM_PARTS" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.DATA_MASK_ENABLED" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.DATA_WIDTH" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.MEMORY_PART" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.MEMORY_TYPE" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.MEM_ADDR_MAP" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.SLOT" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3.TIMEPERIOD_PS" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.ASSOCIATED_BUSIF" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.ASSOCIATED_RESET" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.CLK_DOMAIN" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_CLOCK.PHASE" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.ADDR_WIDTH" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.ARUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.AWUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.BUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.DATA_WIDTH" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_BRESP" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_BURST" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_CACHE" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_LOCK" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_PROT" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_QOS" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_RRESP" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.HAS_WSTRB" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.ID_WIDTH" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.MAX_BURST_LENGTH" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.NUM_READ_OUTSTANDING" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.NUM_WRITE_OUTSTANDING" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.PROTOCOL" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.READ_WRITE_MODE" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.RUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.SUPPORTS_NARROW_BURST" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI.WUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.ADDR_WIDTH" xilinx:valueSource="user_init" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.ARUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.AWUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.BUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.DATA_WIDTH" xilinx:valueSource="user_init" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_BRESP" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_BURST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_CACHE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_LOCK" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_PROT" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_QOS" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_RRESP" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.HAS_WSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.ID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.MAX_BURST_LENGTH" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.NUM_READ_OUTSTANDING" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.NUM_WRITE_OUTSTANDING" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.PROTOCOL" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.READ_WRITE_MODE" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.RUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.SUPPORTS_NARROW_BURST" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.C0_DDR3_S_AXI_CTRL.WUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_AxiAddressWidth" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_AxiArbitrationScheme" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_AxiDataWidth" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_CLKFBOUT_MULT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_CLKOUT0_DIVIDE" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_CasLatency" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_CasWriteLatency" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_DIVCLK_DIVIDE" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_DataMask" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_DataWidth" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_Ecc" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_InputClockPeriod" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_Mem_Add_Map" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_MemoryPart" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_MemoryType" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.C0.DDR3_TimePeriod" xilinx:valueSource="user"/>
      </xilinx:configElementInfos>
    </xilinx:coreExtensions>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2017.4</xilinx:xilinxVersion>
      <xilinx:checksum xilinx:scope="busInterfaces" xilinx:value="220bc088"/>
      <xilinx:checksum xilinx:scope="memoryMaps" xilinx:value="b9b05471"/>
      <xilinx:checksum xilinx:scope="fileGroups" xilinx:value="b9b37610"/>
      <xilinx:checksum xilinx:scope="ports" xilinx:value="e4eff04a"/>
      <xilinx:checksum xilinx:scope="hdlParameters" xilinx:value="b32f67ac"/>
      <xilinx:checksum xilinx:scope="parameters" xilinx:value="28287270"/>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
